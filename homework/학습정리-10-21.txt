1. 상속을 UML로 표시하면?
▶ UML이란 통합 모델링 언어(Unified Modeling Language)를 뜻하는 약자로
소프트웨어 공학에서 사용되는 표준화된 범용 모델링 언어이다.
평소 그리던 '메모리 그리기'로 이해하면 된다.
 
                                                           UML 표시
class Man{                                  
  ...                                                            Man  
}                                                                ↑
                                                          BusinessMan    
class BusinessMan extends Man{
  ...
}
 
2. 부모 클래스와 자식 클래스의 다른 용어들은?
▶ 부모클래스 = 상위 클래스, 기초 클래스; class Parents { ... }
   자식 클래스 = 하위 클래스, 유도 클래스; class Children extends Parens { ... } 


3. this 키워드와 super 키워드의 차이는 무엇인가요?
▶this는 자기 자신을 호출하는 것인데 super는 자식 클래스가 부모클래스를 호출했을 떄 
부모클래스의 변수(?)를 this 대신 super를 사용해서 호출한다. 

4. 단일 상속과 다중 상속 이란 무엇인가요? UML 로의 표기는?
▶ 단일상속: 자식클래스가 하나의 부모클래스만 상속
    다중상속: 자식클래스가 여럿의 부모클래스를 상속 

        단일 상속                                       다중 상속
           Man                                   AAA                 MMM
            ↑                                       ↖                   ↗
      BusinessMan                                  BusinessMan
 

5.
다음은 2차원 상의 한 점을 표현하는 Point 클래스이다. 
Point를 상속받아 색을 가진 점을 나타내는 ColorPoint 클래스를 작성하라. 
다음 main() 메소드를 포함하고 실행 결과와 같이 출력되게 하라.

class Point {
	private int x, y;
	public Point(int x, int y) { this.x = x; this.y = y; }
	public int getX() { return x; }
	public int getY() { return y; }
	protected void move(int x, int y) { this.x =x; this.y = y; }

public static void main(String[] args) {
	ColorPoint cp = new ColorPoint(5, 5, "YELLOW");
	cp.setXY(10, 20);
	cp.setColor("RED");
	String str = cp.toString();
	System.out.println(str+"입니다. ");
}

/*
=======================
RED색의 (10,20)의 점입니다.
*/
▶


6. 다음 main() 메소드와 실행 결과를 참고하여 TV를 상속받은 ColorTV 클래스를 작성하라.
다음 TV 클래스가 있다.

class TV{
   private int size;
   public TV(int size) { this.size = size; }
   protected int getSize() { return size; }
}



public static void main(String[] args) {
   ColorTV myTV = new ColorTV(32, 1024);
   myTV.printProperty();
}
/*
===========
32인치 1024컬러
*/
▶




7. 다음 main() 메소드와 실행 결과를 참고하여 ColorTV를 상속받는 IPTV 클래스를 작성하라.

public static void main(String[] args) {
   IPTV iptv = new IPTV("192.1.1.2", 32, 2048); //"192.1.1.2" 주소에 32인치, 2048컬러
   iptv.printProperty();
}
/*
=============================================
나의 IPTV는 192.1.1.2 주소의 32인치 2048컬러
*/

▶