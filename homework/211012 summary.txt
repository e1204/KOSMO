1. 변수의 스코프에 대하여 설명하시오.
▶중괄호와 중괄호 사이를 가리킨다.
Scope란 영역을 의미한다. 
즉, 변수의 스코프는 변수의 영역으로 직역이 가능하고 변수의 범위라고 보면 되겠다.
해당 변수의 스코프는 중괄호 { } 이다.
변수명이 중복되면 에러가 난다.


2.지역변수란?
▶함수 안에 선언 된 모든 변수


3.인스턴스 변수란?
▶클래스 내에 선언된 변수 (인스턴스란 객체를 의미 )


4. 아래의 함수를 펙토리얼로 표현하시오.
System.out.println("3 factorial: " + factorial(3));
System.out.println("3 factorial: " + factorial(12));
▶
	public static void main(String[] args) {

		System.out.println("3 factorial: " + factorial(3));
		System.out.println("3 factorial: " + factorial(12));

	}

	public static int factorial(int i) {
		if (i == 1)
			return 1;

		else

			return i * factorial(i - 1);
	}
}

출력값:
3 factorial: 6
3 factorial: 479001600


5.클래스의 구성요소는?
▶클래스 = 데이터 + 기능
클래스는 변수와 메소드 2개로 구성되어 있다.


6.원의 넓이는 구하는 프로그램을 아래와 같이 작성하시오.
  - 원클래스를 만들것
    - 변수 radius
    - 변수 radius에 대한 setter getter 함수 만들것
    - getArea 함수
  
  -메인 메소드를 가진 다른 클래스(AreaTest)에서 원 객체를 생성할것
▶ 
class Circle {

	int radius;

	public void setRadius(int r) {
		radius = r;
	}

	public int getRadius() {
		return radius;
	}

	public double getArea() {
		return radius * radius * Math.PI;
	}
}

public class AreaTest {
	public static void main(String[] args) {

		Circle circle = new Circle();

		circle.setRadius(6);

		int radius = circle.getRadius();
		double area = circle.getArea();

		System.out.println(radius);
		System.out.println(area);

	}
}
출력값:
6
113.09733552923255


7. 객체에 대하여 설명하시오.
▶객체란 인스턴스를 의미하며, class를 메모리에 올린 상태를 뜻한다.



8. 아래의 클래스에 대하여, 메모리 그림을 그리시오.
class Rectangle{
	int width;
	int height;
	
	public int getArea() {
		return width * height;
	}
	
	public int getWidth() {
		return width;
	}
	public void setWidth(int width) {
		this.width = width;
	}
	public int getHeight() {
		return height;
	}
	public void setHeight(int height) {
		this.height = height;
	}
	
}
▶



9.클래스와 객체의 차이는?
▶
- 클래스 : .class
- 객체: .class를 메모리에 올린것 (우리가 그림으로 그리는 것처럼 올라감. 그게 객체 생성)




10.아래의 프로그램을 작성하시오.
-1 부터 num 까지 합을 구하는 class 를 작성하도록 하시오.
 
public class SumMain {

    public static void main(String[] args) {

        GetSum getsum = new GetSum(); //1)객체 생성
         int num; //2)num 변수 선언
         num = 50;

         getsum.setNum(num); //3)getsum 객체의 setNum함수 호출, num값 50 저장
         getsum.sum(); //4)getsum객체의 sum함수 호출, 1-50까지 합 구함

      }

}
▶힌트: 

class GetSum {

	int num;

	public void setNum(int num) {
		this.num = num;
	}

	public int sum() {
		int sum = 0;
		for (int i = 1; i <= num; i++) {
			sum += i;
		}
		System.out.println(sum);
		return sum;
	}

}

public class SumMain {

	public static void main(String[] args) {

		GetSum getsum = new GetSum();
		int num;
		num = 50;

		getsum.setNum(num);
		getsum.sum();

	}

}
출력값:
1275






11.아래의 프로그래밍을 작성하시오.
 
Gugudan gugudan = new Gugudan();
gugudan.printGugu(10); //1단부터 10단까지 출력
gugudan.printGugu(20); //1단부터 20단까지 출력
▶

class Gugudan {

	int gugudan;

	public void printGugu(int dan) {

		gugudan = dan;

		for (int i = 1; i <= dan; i++) {
			for (int j = 1; j < 10; j++) {
				System.out.println(i + "x" + j + "=" + (i * j));
			}
			System.out.println();

		}
		System.out.println();
	}

}

public class Num11 {

	public static void main(String[] args) {

		Gugudan gugudan = new Gugudan();

		gugudan.printGugu(10);
		gugudan.printGugu(20);

	}

}

출력값:
/*
 * 1x1=1 1x2=2 1x3=3 1x4=4 1x5=5 1x6=6 1x7=7 1x8=8 1x9=9
 * 
 * 2x1=2 2x2=4 2x3=6 2x4=8 2x5=10 2x6=12 2x7=14 2x8=16 2x9=18
 * 
 * 3x1=3 3x2=6 3x3=9 3x4=12 3x5=15 3x6=18 3x7=21 3x8=24 3x9=27
 * 
 * 4x1=4 4x2=8 4x3=12 4x4=16 4x5=20 4x6=24 4x7=28 4x8=32 4x9=36
 * 
 * 5x1=5 5x2=10 5x3=15 5x4=20 5x5=25 5x6=30 5x7=35 5x8=40 5x9=45
 * 
 * 6x1=6 6x2=12 6x3=18 6x4=24 6x5=30 6x6=36 6x7=42 6x8=48 6x9=54
 * 
 * 7x1=7 7x2=14 7x3=21 7x4=28 7x5=35 7x6=42 7x7=49 7x8=56 7x9=63
 * 
 * 8x1=8 8x2=16 8x3=24 8x4=32 8x5=40 8x6=48 8x7=56 8x8=64 8x9=72
 * 
 * 9x1=9 9x2=18 9x3=27 9x4=36 9x5=45 9x6=54 9x7=63 9x8=72 9x9=81
 * 
 * 10x1=10 10x2=20 10x3=30 10x4=40 10x5=50 10x6=60 10x7=70 10x8=80 10x9=90
 * 
 * 
 * 1x1=1 1x2=2 1x3=3 1x4=4 1x5=5 1x6=6 1x7=7 1x8=8 1x9=9
 * 
 * 2x1=2 2x2=4 2x3=6 2x4=8 2x5=10 2x6=12 2x7=14 2x8=16 2x9=18
 * 
 * 3x1=3 3x2=6 3x3=9 3x4=12 3x5=15 3x6=18 3x7=21 3x8=24 3x9=27
 * 
 * 4x1=4 4x2=8 4x3=12 4x4=16 4x5=20 4x6=24 4x7=28 4x8=32 4x9=36
 * 
 * 5x1=5 5x2=10 5x3=15 5x4=20 5x5=25 5x6=30 5x7=35 5x8=40 5x9=45
 * 
 * 6x1=6 6x2=12 6x3=18 6x4=24 6x5=30 6x6=36 6x7=42 6x8=48 6x9=54
 * 
 * 7x1=7 7x2=14 7x3=21 7x4=28 7x5=35 7x6=42 7x7=49 7x8=56 7x9=63
 * 
 * 8x1=8 8x2=16 8x3=24 8x4=32 8x5=40 8x6=48 8x7=56 8x8=64 8x9=72
 * 
 * 9x1=9 9x2=18 9x3=27 9x4=36 9x5=45 9x6=54 9x7=63 9x8=72 9x9=81
 * 
 * 10x1=10 10x2=20 10x3=30 10x4=40 10x5=50 10x6=60 10x7=70 10x8=80 10x9=90
 * 
 * 11x1=11 11x2=22 11x3=33 11x4=44 11x5=55 11x6=66 11x7=77 11x8=88 11x9=99
 * 
 * 12x1=12 12x2=24 12x3=36 12x4=48 12x5=60 12x6=72 12x7=84 12x8=96 12x9=108
 * 
 * 13x1=13 13x2=26 13x3=39 13x4=52 13x5=65 13x6=78 13x7=91 13x8=104 13x9=117
 * 
 * 14x1=14 14x2=28 14x3=42 14x4=56 14x5=70 14x6=84 14x7=98 14x8=112 14x9=126
 * 
 * 15x1=15 15x2=30 15x3=45 15x4=60 15x5=75 15x6=90 15x7=105 15x8=120 15x9=135
 * 
 * 16x1=16 16x2=32 16x3=48 16x4=64 16x5=80 16x6=96 16x7=112 16x8=128 16x9=144
 * 
 * 17x1=17 17x2=34 17x3=51 17x4=68 17x5=85 17x6=102 17x7=119 17x8=136 17x9=153
 * 
 * 18x1=18 18x2=36 18x3=54 18x4=72 18x5=90 18x6=108 18x7=126 18x8=144 18x9=162
 * 
 * 19x1=19 19x2=38 19x3=57 19x4=76 19x5=95 19x6=114 19x7=133 19x8=152 19x9=171
 * 
 * 20x1=20 20x2=40 20x3=60 20x4=80 20x5=100 20x6=120 20x7=140 20x8=160 20x9=180
 */








동영상 시청하기
