1.문자가 뿌려지는 원리를 설명해 보시오.
컴퓨터에 보이는 모든 문자와 글자는 숫자 값이 존재한다. 
즉, 구현되는 문자값 별로 일 대 일 대응되는 고유 숫자가 있으며 이를 [코드표]라고 부른다. 
A, * 와 같은 것을 [폰트]라고 부르며 이 폰트를 구현하기 위해 픽셀들을 찍고 각 픽셀 문자별로 숫자값을 부여했다.


2. ASCII(아스키 코드)란?
아스키 코드란 미국정보교환표준부호(American Standard Code for Information Interchange)의 약자로 1960년 10월 미국에서 개발이 시작되어 1963년 표준화 초판을 발간한 대표적인 알파벳 문자 인코딩이다. 아스키는 총 128개로 이루어져 있으며 대부분 문자 인코딩의 조상급 코드이다. 
아스키 또한 컴퓨터에 구현되는 문자로 알파벳 별로 고유 숫자가 존재하며 이진법, 팔진법, 십진법, 십육진법이 있다.
♧주요 아스키코드: 65번 A
♧주의 아스키코드: 32번 sp (스페이스) → 빈 칸을 띄우는 것조차 32번이라는 숫자를 부여하여 문자 취급을 한다.


3. Java Keywords: 키워드란?
자바 예약어를 뜻하며 지정된 목적 이외의 용도로 사용할 수 없다.
즉, 사용자가 정의하는 변수나 클래스의 이름으로 사용하지 않는 것이다.
ex)기본 자료형: boolen, byte, char, short, int, long, float, double


4. 컴퓨터에서 음의 정수 표현 방법
음의 정수를 표현하는 방법은 양의 정수의 이진수 표현에 2의 보수를 취하면 된다. 즉, 2의 보수법으로 음의 정수를 구할 수 있다.



5. -5의 '컴퓨터에서의 2진수 값'을 나타내시오.
양의 정수의 이진수 표현에 2의 보수를 취한 것이 음의 정수의 이진수 값이다. 따라서 -5의 값을 구하기 위해 우선 5의 이진수를 구해야 한다.

   2) 5
   2  2....1
      1....0
    
5의 이진수는 101이다. _ _ _ _ _ 1 0 1의 1의 보수는 1 1 1 1 1 0 1 0 이다. (1과 0 반전)
2의 보수는 1의 보수에서 1을 더하면 된다. 즉 5의 이진수의 2의 보수는 11111011이며 -5의 2진수 값이다.
      
      
      
6. 실수에서 오차가 생기는 원인은?
실수는 소숫점 아래 무한한 숫자들이 존재하고 그것의 근사값을 컴퓨터 화면에 구현한다. 따라서 정수와 달리 실수는 오차없이 표현하는 것은 불가하다.


7. 실수의 표현법(고정소수법, 부동소수법)을 설명하시오
8. 실수의 표현법(고정소수법, 부동소수법)을 설명하시오.
실수를 표현하기 위해서는 정밀도를 낮추고 표현 범위 값을 넓히는 방법으로 오차를 줄이는데 실수 표현 방법의 기준을 식으로 나타내자면, +-(1.m)*2의 e마이너스 127승이다. 



9. 정밀도란?
실수의 오차값을 줄이는 것을 뜻한다. 
실수를 표현하는 데이터 타입 float과 double은 소숫점 아래 표현할 수 있는 자리수가 다른다. 
double의 표현 가능 범위가 float보다 넓어 실수값에 대한 오차를 줄이기 위해 double을 더 사용하고 이러한 것을 정밀도라고 한다. 


10. 상수란 무엇이며 변수와의 차이는?
상수(constant)란 고정되어 있는 변하지 않는 데이터 값이고 변수는 변화가 가능한 수이다.
상수를 설정하면 메모리 값(메모리 위치)를 변경할 수 없다.
개발자들은 대문자로 상수의 이름을 짓는 것이 관례이다.


11. 초기화란?
변수 선언 이후 값을 처음 할당하는 것을 뜻한다. 
final이 변수명 앞에 붙으면 초기화를 한 번만 할 수 있으며 변수가 아니라 상수가 된다.


12. 리터럴이란?
소수 코드의 고정된 값을 대표하는 용어. 값이 변하지 않는 데이터(메모리 위치 안의값)를 의미한다. 
즉, 데이터 값 그 자체이다. 변수에 넣는 변하지 않는 데이터.
정수는 무조건 int형으로 인식하기로 약속하였는데 int num1 = 3 + 6; 에서 3과 6은 정수형 리터럴이다.
double num2 = 3.3 + 4.5;에서 3.3rhk 4.5는 실수형 리터럴이다.


13. 32비트 시스템에서 최대 사용할 수 있는 메모리의 양은? and 왜? 
윈도우 32bit 버전은 이론적으론 메모리 램 4기가까지 인식을 한다. 하지만 기본 램 4기가인 요즘 컴퓨터에 설치해보면 3기가 내외로 나온다. 1기가 정도 손실이 발생한다. 이유는 일단 비디오 메모리, 내부 장치 등도 램에 할당해주면서 그만큼 발생!

비트로 나타낼 수 있는 숫자는 0, 1로 두개이므로, 32비트로 나타낼 수 있는 숫자의 갯수는 2의 32승으로 4,294,967,296개다. 따라서 32비트는 주소공간으로 4,294,967,296개를 사용할 수 있는데, 주소 공간 하나당 1Byte이므로 2^32B = 4(2^30)B = 4GB의 메모리를 한번에 인식해서 처리한다. 


>> 32비트 시스템의 메모리양은 8기가. 더 달아도 쓸모가 없습니다.




