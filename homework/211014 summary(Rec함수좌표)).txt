1. set classpath 에 대하여 설명하시오.
▶자기자신의 폴더에서 먼저 찾아보고 
이 폴더에서 필요한 클래스들을 찾아라 

2.절대 경로와, 상대경로란?
▶절대 경로란 최상위 디렉토리로 시작하는 것이다.
상대 경로는 기준 자체가 자기 자신인 것이다.

3.  cd  . 관 cd .. 의 차이는?
▶ cd.은 자기자신(상대경로)이고 cd..(절대경로)을 치면 상위 폴더로 이동한다.

4.package 에 대하여 설명해 보시오.
▶클래스 이름이 같으면 오류가 발생하는데 이를 해결할 수 있는 것이 패키지이다.

5.정보은닉에 대하여 설명하여 보시오.
▶실수롤 음수를 세팅해도 걸러낼 수 있다. private을 통해 보호하기 때문.
예를 들어 나이를 먹는 것에 대해 계산하려는데 실수로 음수를 적어 넣었다.
이러한 실수는 컴파일 오류로 이어지는데 이를 막기 위해 private이라는 글자를 추가하여 정보를 은닉한다.
즉, 소스코드를 통해 한 번 걸러내는 것이 정보 은닉이다.
멤버 변수의 값을 컨트롤 할 때 오류를 피하기 위해 set함수를 통해서 변수 값을 컨트롤 할 수 있도록 사용하는 것
set 함수 get함수를 한 개 만들어주는 이유도 여기 있다.

6.접근제한자에 대하여 설명하시오.
▶접근제한자 (access modifier에는 4가지 종류가 있다.
public 클래스 간 모든 패키지. 공공재.
protected 상속 관련
default 클래스 간 같은 패키지 내에서만 접근 제한. public이 아무것도 안 붙은 ㅏㅇ태.
private 같은 클래스 내에서만 가능.

7. 지역변수에 접근 제한자가 필요없는 이유는?
▶ 지역변수는 사용후 메모리에서 제거되어서

8. 아래의 클래스를 구현하시오. 

Money money = new Money(-126000);
money.show();

출력 
잘못된 입력입니다.
오만원 0장....
오만원 0장....
등등등....
▶
package num08.money;

class Money {

	private int money;

	Money(int money) {
		setMoney(money);
	}

	public void setMoney(int money) {
		if (money < 0) {
			this.money = 0;
			System.out.println("잘못된 입력입니다.");

			return;
		}else{
		this.money = money;
		}

	}

	public void show() {
		System.out.println("오만원: " + (money / 50000) + "장");
		money = money % 50000;
		System.out.println("만원: " + (money / 10000) + "장");
		money = money % 10000;
		System.out.println("오천원: " + (money / 5000) + "장");
		money = money % 5000;
		System.out.println("천원: " + (money / 1000) + "장");
		money = money % 1000;
		System.out.println("오백원: " + (money / 500) + "장");
		money = money % 500;
		System.out.println("백원: " + (money / 100) + "장");
		money = money % 100;

	}

}




9.아래의 클래스를 구현하시오.
Employee employee = new Employee("홍길동", 19, "서울 뉴욕시", "개발 1팀");
employee.printInfo();
}

출력:
이름 : 홍길동
나이 : 19
주소 : 서울 뉴욕시
부서 : 개발 1팀
▶
class Employee {
	
	String name;
	int age;
	String address;
	String team;
	
	Employee(String name, int age, String address, String team){
		this.address=address;
		this.age=age;
		this.name=name;
		this.team=team;
	}

	void printlnfo() {
		System.out.println("이름 : " + name + '\n' + "나이 : " + age+ '\n' +"주소 : "+address+ '\n'+"부서 : " + team);
		
	}
	
}

public class EmployeeTest {

	public static void main(String[] args) {
		Employee employee = new Employee("홍길동", 19, "서울 뉴욕시", "개발 1팀");
		employee.printlnfo();

	}

}


10.다음 멤버를 가지고 직사각형을 표현하는 Rectangle 클래스를 작성하라.
​
- int 타입의 x, y, width, height 필드 : 사각형을 구성하는 점과 크기 정보
- x, y, width, height 값을 매개변수로 받아 필드를 초기화하는 생성자
- int square() : 사각형 넓이 리턴
- void show() : 사각형의 좌표와 넓이를 화면에 출력
- boolean contains(Rectangle r) : 매개변수로 받은 r이 현 사각형 안에 있으면 true 리턴 (겹치면 안됨. 완전히 안에 있어야 true)
- main() 메소드의 코드와 실행 결과는 다음과 같다.


public static void main(String args[]) {
		Rectangle r = new Rectangle(2, 2, 8, 7);
		Rectangle s = new Rectangle(5, 5, 6, 6);
		Rectangle t = new Rectangle(1, 1, 10, 10);
		
		r.show();
		System.out.println("s의 면적은 "+s.square());
		if(t.contains(r)) System.out.println("t는 r을 포함합니다.");
		if(t.contains(s)) System.out.println("t는 s를 포함합니다.");
	}

출력:
(2,2)에서 크기가 8x7인 사각형
s의 면적은 36
t는 r을 포함합니다.

▶

