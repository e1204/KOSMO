1. is a 관계와 has a 관계란?
▶
iS- A 는 비둘기는 새다. (상속 사용 가능) 
HAS - A는 어딘가 애매하면..

2.다형성(polymorphism)이란 무엇인가?
▶ 부모는 자식. 
부모 MEANS 부모 클래스, 자식 MEANS 자식 클래스.

3. 아래가 되지 않는 이유에 대하여 메모리 그림으로 설명하시오.

//MobilePhone(부모) SmartPhone(자식)

SmartPhone ph2 = new MobilePhone();
▶ 다형성은 부모는 자식이다를 뜻하는데 
해당 함수(?)는 자식은 부모다를 보여준다. 


4.메소드 오버라이딩(Overriding) 이란?
▶자식꺼.
반드시 상속 관계. 같은 함수로 바디만 다를 것.
같은 함수란? 리턴타입 + 함수명 +파라미터【 void yummy( ) 】
바디란? 함수 안에 있는 내용【 System.out.println( ) 】
번외) 오버로딩: 같은 함수 이름으로 함수를 만든다. println

5.자바의 정석: 연습 문제 56page - 3개의 함수를 완성 하시오.
//잔액이 부족하여 Computer를 살 수 없습니다.
//구입한 물건: 티비, 컴, 티비, 오디오, 컴, 컴
//시용금액: 850
//남은금액: 150
▶import Oct22_java56.Audio;
import Oct22_java56.Buyer;
import Oct22_java56.Computer;
import Oct22_java56.TV;

public class MarketMain_Java56 {
	public static void main(String[] args) {
		
		Buyer b = new Buyer(1000);
		b.buy(new TV());
		b.buy(new Computer());
		b.buy(new TV());
		b.buy(new Audio());
		b.buy(new Computer());
		b.buy(new Computer());
		b.buy(new Computer());
		
		b.summary();
  
	}
}
▶▶public class Product {

	int price;

	public Product(int price) {
		this.price = price;
	}
}

▶▶public class Audio extends Product {

	public Audio() {
		super(50);
	}
	public String toString() {
		return "Audio";
	}
}
▶▶public class Computer extends Product {

	public Computer() {
		super(200);
	}
	public String toString() {
		return "Computer";
	}
}
▶▶public class TV extends Product {

	public TV() {
		super(100);
	}
	public String toString() {
		return "TV";
	}
}
▶▶▶public class Buyer {

	int money = 1000;
	Product[] cart = new Product[3];
	int i = 0; // 핵심. i 를 어땋게 컨트롤하냐


	public Buyer(int money) {
		this.money = money;
	}

	public void buy(Product p) {
	
		if (money < p.price) {
			System.out.println("잔액이 부족하여 "+ p +"를 살 수 없습니다.");
			return;
		} 
		money = money - p.price;
		add(p); 

	}

	public void add(Product p) {
		// [i] = p; cart의 첫번째 i칸에 p를 넣는게 목적
		// i++; 이게 핵심

		if (i >= cart.length) {
			//temp라 안하고 cart했었음..
			Product[] tmp = new Product[cart.length*2];
			//int i = 0;
			System.arraycopy(cart, 0, tmp, 0, cart.length);
			
			cart = tmp;
		}

			//for (i = 0; i >= tmp.length; i++) {
				//tmp[i] = p;
				//i++;
			//}
		cart[i++]=p;
			
	}

	public void summary() {
		
		//for(int i =0; i < cart.length ; i ++) {
			//System.out.print("구입한 목록: " + cart[i] + " ");
		//}
		//System.out.println();
		System.out.print("구입한 목록: " );
		for(Product e: cart) {
			System.out.print(e + " ");
		}
		System.out.println();
		
		
		int sum= 0;
		for(Product p :  cart) {
			sum = sum + p.price;
		}
		
		
		System.out.println("사용금액: " + sum);
		System.out.println("남은금액: " + money );
	}

}





6. 갬블링 게임을 만들어 보자. (문제 5번 과 6번은 상속은 안써도됨)
두 사람이 게임을 진행한다. 
이들의 이름을 키보드로 입력 받으며 
각 사람은 Person 클래스로 작성하라. 
그러므로 프로그램에는 2개의 Person 객체가 생성되어야 한다.

 두 사람은 번갈아 가면서 게임을 진행하는데 
각 사람이 자기 차례에서 <Enter> 키를 입력하면, 
3개의 난수가 발생되고 이 숫자가 모두 같으면 승자가 되고 
게임이 끝난다.
 난수의 범위를 너무 크게 잡으면 3개의 숫자가 
일치하게 나올 가능성이 적기 때문에 숫자의 범위는 
1~3까지로 한다.
=========================
1번째 선수 이름>>수희
2번째 선수 이름>>연수
[수희]:
3  1  1  아쉽군요!
[연수]:
3  1  3  아쉽군요!
[수희]:
2  2  1  아쉽군요!
[연수]:
1  1  2  아쉽군요!
[수희]:
3  3  3  수희님이 이겼습니다!
▶import java.util.Scanner;
import Oct22_Sub.Person;

public class Gambling {
	public static void main(String[] args) {
	
		Scanner sc = new Scanner(System.in);
		
		System.out.println("1번째 대전 상대(수희/연수)>>");
		String name = sc.next();
		//첫번째 상대의 객체생성
		Person p1 = new Person(name);
		
		
		System.out.println("2번째 대전 상태(수희/연수)>>");
		name = sc.next();
		//name을 이용해서 또 만들어
		Person p2 = new Person(name);
		
		
		//엔터키가 남아 있는 것을 싹 비우고 싶을 때? sc.nextLine으로 한 줄 비워줘
		String buffer = sc.nextLine();
		
		
		while(true) {
			System.out.print("[" + p1.getName() + "]:"); 
			//name에 대한 게터세터 만들러 가자~ public이니까 사용 가능
			
			//enter를 받아야함. 한 줄에 있는 buffer를 싹 받아야 함.
			//이럴떄 next가 안 먹힘. 글자를 받아내는게 아니라서.
			//엔터 받아내기 위한 코드가 sc.nextLine();
			buffer = sc.nextLine();
			
			if(p1.game()) {
				System.out.println("[" + p1.getName() + "]:" + "님이 이겼습니다."); 
				break; //이겼으면 전체를 빠져나가. 게임 끝내버려
			}
			System.out.println("아쉽군요"); //이제 p2거 확인하며 while문 돌려돌려~ 
			
			System.out.print("[" + p2.getName() + "]:"); 
			buffer = sc.nextLine();
			
			if(p2.game()) {
				System.out.println("[" + p2.getName() + "]:" + "님이 이겼습니다."); 
				break;
			}
			System.out.println("아쉽군요");  
			

		}
	}

}

▶▶public class Person {
	
	
	//데이터 멤버 반드시 정하고
	//데이터 멤버 컴트롤 할 함수 정해
	//pesron에 new 두 명 
	private String name;
	private int num1, num2, num3; //수희가 가진 3개의 숫자
	

	public Person (String name){
		this.name = name;
	} 
	
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	//랜덤으로 떄려 넣고 num123 비교해서 같은지 안 같은지 리턴하는 함수 만들기
	public boolean game() {
		
		//전체가 int로 형변환
		//랜덤 3개 +1
		num1 =(int)(Math.random()*3+1); 
		num2 =(int)(Math.random()*3+1); 
		num3 =(int)(Math.random()*3+1); 
		
		System.out.print("\t" +num1 +" " + num2 +" " + num3 );
		//3개 같은거 표현은 반. 드. 시 아래와 같이
		//(num1 == num2 == num3) 이러면 안됨 ㅋㅋㅋㅋㅋ 컴파일 에러남
		if(num1 == num2 && num2 == num3) {
			return true;
		}
		return false;
		
	}					
}




7. 프로그래밍

문제 5의 갬블링 게임을 n명이 하도록 수정하라.
실행 예시와 같이 게임에 참여하는 선수의 수를 입력 받고 각 선수의 이름을 
입력 받도록 수정하라.

겜블링 게임에 참여할 선수 숫자>>3
1번째 선수 이름>>황
2번째 선수 이름>>이
3번째 선수 이름>>김
[황]:
2  3  3  아쉽군요!
[이]:
1  2  2  아쉽군요!
[김]:
2  2  3  아쉽군요!
[황]:
3  2  2  아쉽군요!
[이]:
1  1  3  아쉽군요!
[김]:
2  2  1  아쉽군요!
[황]:
2  2  2  황님이 이겼습니다!
▶import java.util.Scanner;
import Oct22_Sub.People;

public class GamblingMany {
	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
			
		People[] user = new People[3];	
			user[0] = new People("1번째 플레이어");
			user[1] = new People("2번째 플레이어");		
			user[2] = new People("3번째 플레이어");

		
		System.out.println("1번째 플레이어>>");
		String name = sc.next();
		People user1 = new People(name);
		
		
		System.out.println("2번째 플레이어>>");
		name = sc.next();
		People user2 = new People(name);
		
		
		System.out.println("3번째 플레이어>>");
		name = sc.next();
		People user3 = new People(name);
		
		String buffer = sc.nextLine();
		
		
		while(true) {
			System.out.print("[" + user1.getName() + "]:"); 

			buffer = sc.nextLine();
			
			if(user1.game()) {
				System.out.println("[" + user1.getName() + "]:" + "님이 이겼습니다."); 
				break; 
			}
			System.out.println("아쉽군요"); 
			
			System.out.print("[" + user2.getName() + "]:"); 
			buffer = sc.nextLine();
					
			
			if(user2.game()) {
				System.out.println("[" + user2.getName() + "]:" + "님이 이겼습니다."); 
				break;
			}
			System.out.println("아쉽군요");  
			
			System.out.print("[" + user3.getName() + "]:"); 
			buffer = sc.nextLine();
			
									
			if(user3.game()) {
				System.out.println("[" + user3.getName() + "]:" + "님이 이겼습니다."); 
				break;
			}
			System.out.println("아쉽군요");  
			

		}
	}
}

▶▶public class People {
	
	private int num1, num2, num3;
	private String name;

	public People (String name){
		this.name = name;
	} 

	
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	
	public boolean game() {
			
		num1 =(int)(Math.random()*3+1); 
		num2 =(int)(Math.random()*3+1); 
		num3 =(int)(Math.random()*3+1); 
		
		System.out.print("\t" +num1 +" " + num2 +" " + num3 );

		if(num1 == num2 && num2 == num3) {
			return true;
		}
		return false;
		
	}
	
}

8.주말에 개별 진척도 꼭 못한거 내지는 부족한거 반드시 채워 주시기 바랍니다.
화이팅 ^^; 
▶



