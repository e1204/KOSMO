1. is a 관계와 has a 관계란?
▶
iS- A 는 비둘기는 새다. (상속 사용 가능) 
HAS - A는 어딘가 애매하면..

2.다형성(polymorphism)이란 무엇인가?
▶ 부모는 자식. 
부모 MEANS 부모 클래스, 자식 MEANS 자식 클래스.

3. 아래가 되지 않는 이유에 대하여 메모리 그림으로 설명하시오.

//MobilePhone(부모) SmartPhone(자식)

SmartPhone ph2 = new MobilePhone();
▶ 다형성은 부모는 자식이다를 뜻하는데 
해당 함수(?)는 자식은 부모다를 보여준다. 


4.메소드 오버라이딩(Overriding) 이란?
▶자식꺼.
반드시 상속 관계. 같은 함수로 바디만 다를 것.
같은 함수란? 리턴타입 + 함수명 +파라미터【 void yummy( ) 】
바디란? 함수 안에 있는 내용【 System.out.println( ) 】
번외) 오버로딩: 같은 함수 이름으로 함수를 만든다. println

5.자바의 정석: 연습 문제 56page - 3개의 함수를 완성 하시오.
//잔액이 부족하여 Computer를 살 수 없습니다.
//구입한 물건: 티비, 컴, 티비, 오디오, 컴, 컴
//시용금액: 850
//남은금액: 150
▶import Oct22_java56.Audio;
import Oct22_java56.Buyer;
import Oct22_java56.Computer;
import Oct22_java56.TV;

public class MarketMain_Java56 {
	public static void main(String[] args) {
		
		Buyer b = new Buyer(1000);
		b.buy(new TV());
		b.buy(new Computer());
		b.buy(new TV());
		b.buy(new Audio());
		b.buy(new Computer());
		b.buy(new Computer());
		b.buy(new Computer());
		
		b.summary();
  
	}
}
▶▶public class Product {

	int price;

	public Product(int price) {
		this.price = price;
	}
}

▶▶public class Audio extends Product {

	public Audio() {
		super(50);
	}
	public String toString() {
		return "Audio";
	}
}
▶▶public class Computer extends Product {

	public Computer() {
		super(200);
	}
	public String toString() {
		return "Computer";
	}
}
▶▶public class TV extends Product {

	public TV() {
		super(100);
	}
	public String toString() {
		return "TV";
	}
}
▶▶▶public class Buyer {

	int money = 1000;
	Product[] cart = new Product[3];
	int i = 0; // 핵심. i 를 어땋게 컨트롤하냐


	public Buyer(int money) {
		this.money = money;
	}

	public void buy(Product p) {
	
		if (money < p.price) {
			System.out.println("잔액이 부족하여 "+ p +"를 살 수 없습니다.");
			return;
		} 
		money = money - p.price;
		add(p); 

	}

	public void add(Product p) {
		// [i] = p; cart의 첫번째 i칸에 p를 넣는게 목적
		// i++; 이게 핵심

		if (i >= cart.length) {
			//temp라 안하고 cart했었음..
			Product[] tmp = new Product[cart.length*2];
			//int i = 0;
			System.arraycopy(cart, 0, tmp, 0, cart.length);
			
			cart = tmp;
		}

			//for (i = 0; i >= tmp.length; i++) {
				//tmp[i] = p;
				//i++;
			//}
		cart[i++]=p;
			
	}

	public void summary() {
		
		//for(int i =0; i < cart.length ; i ++) {
			//System.out.print("구입한 목록: " + cart[i] + " ");
		//}
		//System.out.println();
		System.out.print("구입한 목록: " );
		for(Product e: cart) {
			System.out.print(e + " ");
		}
		System.out.println();
		
		
		int sum= 0;
		for(Product p :  cart) {
			sum = sum + p.price;
		}
		
		
		System.out.println("사용금액: " + sum);
		System.out.println("남은금액: " + money );
	}

}





6. 갬블링 게임을 만들어 보자. (문제 5번 과 6번은 상속은 안써도됨)
두 사람이 게임을 진행한다. 
이들의 이름을 키보드로 입력 받으며 
각 사람은 Person 클래스로 작성하라. 
그러므로 프로그램에는 2개의 Person 객체가 생성되어야 한다.

 두 사람은 번갈아 가면서 게임을 진행하는데 
각 사람이 자기 차례에서 <Enter> 키를 입력하면, 
3개의 난수가 발생되고 이 숫자가 모두 같으면 승자가 되고 
게임이 끝난다.
 난수의 범위를 너무 크게 잡으면 3개의 숫자가 
일치하게 나올 가능성이 적기 때문에 숫자의 범위는 
1~3까지로 한다.
=========================
1번째 선수 이름>>수희
2번째 선수 이름>>연수
[수희]:
3  1  1  아쉽군요!
[연수]:
3  1  3  아쉽군요!
[수희]:
2  2  1  아쉽군요!
[연수]:
1  1  2  아쉽군요!
[수희]:
3  3  3  수희님이 이겼습니다!
▶


7. 프로그래밍

문제 5의 갬블링 게임을 n명이 하도록 수정하라.
실행 예시와 같이 게임에 참여하는 선수의 수를 입력 받고 각 선수의 이름을 
입력 받도록 수정하라.

겜블링 게임에 참여할 선수 숫자>>3
1번째 선수 이름>>황
2번째 선수 이름>>이
3번째 선수 이름>>김
[황]:
2  3  3  아쉽군요!
[이]:
1  2  2  아쉽군요!
[김]:
2  2  3  아쉽군요!
[황]:
3  2  2  아쉽군요!
[이]:
1  1  3  아쉽군요!
[김]:
2  2  1  아쉽군요!
[황]:
2  2  2  황님이 이겼습니다!
▶


8.주말에 개별 진척도 꼭 못한거 내지는 부족한거 반드시 채워 주시기 바랍니다.
화이팅 ^^; 
▶



