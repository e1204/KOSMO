♣10월 08일 금요일♣

복습) 

◐무한루프(무한반복) Infinite Loop
▶for문 안에 세미콜른; 두개 들어감. 조건 참거짓 숫자전달
		for (;;) {
			System.out.println("Hello Our Earth");
		}

▶do while 문으로 무한 반복
		do {
			System.out.println("Hello World");
		} while (true);

▶무한루프와 break

		int num = 1;

		while (true) {
			if ((num % 6 == 0) && (num % 14 == 0))
				break; // 무한 반복문은 break없이 절대 빠져나올 수 없다.
			num++;
		} // 6의 배수면서 14의 배수인 가작 작은 자연수 찾기로 이해 가능






◐이중포문 (반복문의 중첩형태)
실무에서 120퍼센트 for문을 사용. while이나 do while을 쓰는 경우 거의 없음.
public class ForInFor {

	public static void main(String[] args) {
		// i = 1
		for (int i = 0; i < 3; i++) { // 바깥쪽 for문

			System.out.println("---------------------");
			// j = 2
			for (int j = 0; j < 3; j++) { // 안쪽 for문

				System.out.println("[" + i + "," + j + "]");
				// [0, 0] [0, 1] [0, 2]
				// ---------------------
				//

			}

			System.out.println('\n');
		}

	}

결과값
---------------------
[0,0]
[0,1]
[0,2]


---------------------
[1,0]
[1,1]
[1,2]


---------------------
[2,0]
[2,1]
[2,2]




◐구구단 (이중포문 응용)
	public static void main(String[] args) {

		for (int i = 2; i < 10; i++) {

			for (int j = 1; j < 10; j++) {

				System.out.println(i + "x" + j + "=" + (i * j));

			}

		}

결과값
2x1=2
2x2=4
2x3=6
2x4=8
2x5=10
2x6=12
2x7=14
2x8=16
2x9=18
3x1=3
3x2=6
3x3=9
3x4=12
3x5=15
3x6=18
3x7=21
3x8=24
3x9=27
4x1=4
4x2=8
4x3=12
4x4=16
4x5=20
4x6=24
4x7=28
4x8=32
4x9=36
5x1=5
5x2=10
5x3=15
5x4=20
5x5=25
5x6=30
5x7=35
5x8=40
5x9=45
6x1=6
6x2=12
6x3=18
6x4=24
6x5=30
6x6=36
6x7=42
6x8=48
6x9=54
7x1=7
7x2=14
7x3=21
7x4=28
7x5=35
7x6=42
7x7=49
7x8=56
7x9=63
8x1=8
8x2=16
8x3=24
8x4=32
8x5=40
8x6=48
8x7=56
8x8=64
8x9=72
9x1=9
9x2=18
9x3=27
9x4=36
9x5=45
9x6=54
9x7=63
9x8=72
9x9=81

▶구구단 홀수, 짝수단
	public static void main(String[] args) {

		// 짝수
		for (int i = 2; i < 10; i++) {

			if (i % 2 != 0) {
				continue;
			}

			for (int j = 1; j < 10; j++) {
				System.out.println(i + "x" + j + "=" + (i * j));
			}
		}
		System.out.println('\n');

		// 홀수
		for (int k = 2; k < 10; k++) {
			if (k % 2 != 1) {
				continue;
			}

			for (int j = 1; j < 10; j++) {
				System.out.println(k + "x" + j + "=" + (k * j));
			}
		}
결과값
2x1=2
2x2=4
2x3=6
2x4=8
2x5=10
2x6=12
2x7=14
2x8=16
2x9=18
4x1=4
4x2=8
4x3=12
4x4=16
4x5=20
4x6=24
4x7=28
4x8=32
4x9=36
6x1=6
6x2=12
6x3=18
6x4=24
6x5=30
6x6=36
6x7=42
6x8=48
6x9=54
8x1=8
8x2=16
8x3=24
8x4=32
8x5=40
8x6=48
8x7=56
8x8=64
8x9=72


3x1=3
3x2=6
3x3=9
3x4=12
3x5=15
3x6=18
3x7=21
3x8=24
3x9=27
5x1=5
5x2=10
5x3=15
5x4=20
5x5=25
5x6=30
5x7=35
5x8=40
5x9=45
7x1=7
7x2=14
7x3=21
7x4=28
7x5=35
7x6=42
7x7=49
7x8=56
7x9=63
9x1=9
9x2=18
9x3=27
9x4=36
9x5=45
9x6=54
9x7=63
9x8=72
9x9=81





▶구구단 결과값이 홀수
		for (int i =1; i <=9; i++) {
			
			for(int j =1; j<= 9; j++) {
				int result = i*j;
				
				if(result %2==1) {
					System.out.println(i + "x" + j + "=" + (i * j));
				}
			}
			System.out.println();
		}
		
결과값
1x1=1
1x3=3
1x5=5
1x7=7
1x9=9


3x1=3
3x3=9
3x5=15
3x7=21
3x9=27


5x1=5
5x3=15
5x5=25
5x7=35
5x9=45


7x1=7
7x3=21
7x5=35
7x7=49
7x9=63


9x1=9
9x3=27
9x5=45
9x7=63
9x9=81



▶구구단 결과값이 2의 배수이자 3의 배수인수의 개수 ▶괴어렵다
		int count = 0;
		for (int i = 1; i <= 9; i++) {

			for (int j = 1; j <= 9; j++) {
				int result = i * j;

				if (result % 2 == 0 && result % 3 == 0) {
					count++;
					System.out.println(i + "*" + j + "=" + result + " 갯수:" + count); // 결과값이 이거. 여기서 배수 개수를 뽑아내자
				}

			}
			System.out.println();

		}
		System.out.println("갯수는" + count);

결과값
1*6=6 갯수:1

2*3=6 갯수:2
2*6=12 갯수:3
2*9=18 갯수:4

3*2=6 갯수:5
3*4=12 갯수:6
3*6=18 갯수:7
3*8=24 갯수:8

4*3=12 갯수:9
4*6=24 갯수:10
4*9=36 갯수:11

5*6=30 갯수:12

6*1=6 갯수:13
6*2=12 갯수:14
6*3=18 갯수:15
6*4=24 갯수:16
6*5=30 갯수:17
6*6=36 갯수:18
6*7=42 갯수:19
6*8=48 갯수:20
6*9=54 갯수:21

7*6=42 갯수:22

8*3=24 갯수:23
8*6=48 갯수:24
8*9=72 갯수:25

9*2=18 갯수:26
9*4=36 갯수:27
9*6=54 갯수:28
9*8=72 갯수:29

갯수는29







◐별찍기
Hint: println이 아니라 print 사용. 그럼 행으로 움직임
print(행)와 println(열) 둘 다 안에 들어가는 내용은 같음

디버깅 모드로 한 칸 한 칸 원리 파악하기.


▶5개찍기
*****

		for(int i=1; i<=5; i++) {	
행			System.out.print("*");  
			
		}  



▶5x5
*****
*****
*****
*****
*****
		for (int i = 1; i <= 5; i++) {   // 행역할

			for (int j = 1; j <= 5; j++) {  //여기서부터 모든 알고리즘 시작
				
행				System.out.print("*");
			}
			
열			System.out.println();  //위에 있는거 다섯번 반복
		}





▶직각삼각형 (기본 로직)
*
**
***
****
*****  
		for (int i = 1; i <= 5; i++) {

			for (int j = 1; j <= i; j++) {   //1부터 i까지

				System.out.print("*");
			}
			
			System.out.println();
		}


▶역우향직각삼각형 (기본 로직)
*****
****
***
**
*
		for (int i = 1; i <= 5; i++) {

			for (int j = i; j <= 5; j++) { // i부터 5까지

				System.out.print("*");
			}
			
			System.out.println();
		}



▶좌향직각삼각형
    *
   **
  ***
 ****
*****

		for (int i = 1; i <= 5; i++) {
			// 일단 초기값 4개
			for (int j = 4; j >= i; j--) { // 공백 담당  for(int j=i; j<5; j++) 이것도 가능 

				System.out.print(" "); // 답이 안나온 이유는 스페이스바를 안눌렀고 상단 for문 오류

			}

			for (int j = 1; j <= i; j++) { // 별 담당

				System.out.print("*");
			}

			System.out.println();

		}


▶역좌향직각삼각형
*****
 ****
  ***
   **
    *

		for (int i = 1; i <= 5; i++) {

			for (int j = 1; j < i; j++) { // 공백 담당

				System.out.print(" ");

			}

			for (int j = i; j <= 5; j++) { // 별 담당

				System.out.print("*");
			}

			System.out.println();



▶산찍기
    *
   ***
  *****
 *******
*********

		//1번. 산찍기도 blank 생각안하고 별을 먼저 생각한다. 그러면 좌측부터 13579가 형성됨
		//2번. 그 다음 blank를 생각한다. 좌향직각삼각형의 blank와 완전 똑같음.

		for (int i = 1; i <= 5; i++) {

			for (int j = i; j <5 ; j++) { //이게 2번 blankspace. for (int j = 5; j > i; j--) 얘도 가능

				System.out.print(" ");
			}
			
			for (int j = 1; j <= i*2-1; j++) { //이게 1번 star
				
				System.out.print("*");
			}
			
			System.out.println();

		}



		//또 다른 방법

		for (int i = 1; i <= 5; i++) {
			
			for (int j = i; j <5 ; j++) {   

				System.out.print(" ");
			}


			for (int j = 1; j <= i; j++) {   

				System.out.print("*");      //여기까지는 좌향직각삼각형
			}
			


			for (int j = 1; j <i ; j++) {  //그 다음 옆에 1234를 붙여서 산찍기 완성

				System.out.print("*");
			}

			System.out.println("");

		}














		
